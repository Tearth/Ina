initSidebarItems({"constant":[["AUTHOR",""],["VERSION",""]],"fn":[["handle_debug","Handless `debug [on/off]` command by setting the proper flag."],["handle_go","Handles `go [parameters]` command by running a new search for a position which was set using `position` command. Supported parameters:"],["handle_isready","Handles `isready` commadn by waiting for the busy flag, and then printing response as fast as possible."],["handle_position","Handles `position ...` command with the following variants:"],["handle_quit","Handles `quit` command by terminating engine process."],["handle_setoption","Handles `setoption [name] value [value]` command by creating or overwriting a `name` option with the specified `value`. Recreates tables if `Hash` or `Clear Hash` options are modified."],["handle_stop","Handles `stop` command by setting abort token, which should stop ongoing search as fast as possible."],["handle_ucinewgame","Handles `ucinewgame` command by resetting a board state, recreating abort token and clearing taables."],["recreate_state_tables","Recreates transposition table, pawn hashtable, killers table and history table."],["run","Entry point of the UCI (Universal Chess Interface) and command loop."],["wait_for_busy_flag","Wait for the busy flag before continuing. If the deadline is exceeded, the engine process is terminated."]],"struct":[["UciState",""]]});