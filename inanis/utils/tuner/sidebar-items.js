window.SIDEBAR_ITEMS = {"fn":[["calculate_error","Calculates an error by evaluating all loaded positions with the currently set evaluation parameters. Multithreading is supported by `threads_count`."],["get_array","Gets a Rust representation of the piece `values` array."],["get_header","Gets a generated Rust source file header with timestamp and `best_error`."],["get_parameter","Gets a Rust representation of the parameter with the specified `name` and `value`."],["get_piece_square_table","Gets a Rust representation of the piece-square tables with the specified `values`."],["load_positions","Loads positions from the `epd_filename` and parses them into a list of [TunerPosition]. Returns [Err] with a proper error message if the file couldnâ€™t be parsed."],["load_values","Transforms the current evaluation values into a list of [TunerParameter]. Use `lock_material` if the parameters related to piece values should be skipped, and `random_values` if the parameters should have random values (useful when initializing tuner)."],["run","Runs tuner of evaluation parameters. The input file is specified by `epd_filename` with a list of positions and their expected results, and the `output_directory` directory is used to store generated Rust sources with the optimized values. Use `lock_material` to disable tuner for piece values, and `random_values` to initialize evaluation parameters with random values. Multithreading is supported by `threads_count`."],["save_values","Transforms `values` into the evaluation parameters, which can be used during real evaluation. Use `lock_material` if the parameters related to piece values should be skipped."],["save_values_internal","Saves `index`-th evaluation parameter stored in `values` in the `destination`."],["save_values_to_i16_array_internal","Saves [i16] array starting at the `index` of `values` in the `array`."],["save_values_to_i8_array_internal","Saves [i8] array starting at the `index` of `values` in the `array`."],["validate","Tests the correctness of [load_values] and [save_values] methods."],["write_evaluation_parameters","Generates `parameters.rs` file with current evaluation parameters, and saves it into the `output_directory`."],["write_piece_square_table","Generates piece-square tables (Rust source file with current evaluation parameters), and saves it into the `output_directory`."]],"struct":[["TunerContext",""],["TunerParameter",""],["TunerPosition",""]]};